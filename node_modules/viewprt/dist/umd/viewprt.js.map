{"version":3,"file":"viewprt.js","sources":["../../src/viewport.js","../../src/observer.js","../../src/position-observer.js","../../src/element-observer.js"],"sourcesContent":["/**\n * @class `Viewport`\n * A scrollable container containing multiple observers that\n * are checked each time the viewport is manipulated\n */\nexport function Viewport(container, observerCollection) {\n  this.container = container\n  this.observers = []\n  this.lastX = 0\n  this.lastY = 0\n\n  let scheduled = false\n  const _handler = () => {\n    if (!scheduled) {\n      scheduled = true\n      requestAnimationFrame(() => {\n        const { observers } = this\n        const state = this.getState()\n        for (let i = observers.length; i--; ) observers[i].check(state)\n        this.lastX = state.positionX\n        this.lastY = state.positionY\n        scheduled = false\n      })\n    }\n  }\n\n  const customHandleScrollResize = observerCollection.handleScrollResize\n  const handler = (this.handler = customHandleScrollResize ? customHandleScrollResize(_handler) : _handler)\n\n  const createMutationObserver = () => {\n    const mutationObserver = (this.mutationObserver = new MutationObserver(_handler))\n    mutationObserver.observe(document, { attributes: true, childList: true, subtree: true })\n  }\n\n  const listenerOpts = { capture: true, passive: true }\n  addEventListener('scroll', handler, listenerOpts)\n  addEventListener('resize', handler, listenerOpts)\n\n  if (document.readyState !== 'loading') {\n    createMutationObserver()\n  } else {\n    addEventListener('DOMContentLoaded', createMutationObserver)\n  }\n}\n\nViewport.prototype = {\n  getState() {\n    const { container, lastX, lastY } = this\n    let width, height, positionX, positionY, directionX, directionY\n\n    if (container === document.body) {\n      width = window.innerWidth\n      height = window.innerHeight\n      positionX = window.pageXOffset\n      positionY = window.pageYOffset\n    } else {\n      width = container.offsetWidth\n      height = container.offsetHeight\n      positionX = container.scrollLeft\n      positionY = container.scrollTop\n    }\n\n    if (lastX < positionX) directionX = 'right'\n    else if (lastX > positionX) directionX = 'left'\n    else directionX = 'none'\n\n    if (lastY < positionY) directionY = 'down'\n    else if (lastY > positionY) directionY = 'up'\n    else directionY = 'none'\n\n    return { width, height, positionX, positionY, directionX, directionY }\n  },\n\n  destroy() {\n    const { handler, mutationObserver } = this\n    removeEventListener('scroll', handler)\n    removeEventListener('resize', handler)\n    if (mutationObserver) mutationObserver.disconnect()\n  }\n}\n","import { Viewport } from './viewport'\n\n/**\n * @class Observer\n * Base class - each type of observer implements these options/methods\n */\nexport function Observer(opts) {\n  const offset = ~~opts.offset || 0\n  this.offsetX = opts.offsetX != null ? ~~opts.offsetX : offset\n  this.offsetY = opts.offsetY != null ? ~~opts.offsetY : offset\n  this.container = opts.container || document.body\n  this.once = !!opts.once\n  this.observerCollection = opts.observerCollection || defaultObserverCollection\n  return this.activate()\n}\n\nObserver.prototype = {\n  activate() {\n    const { container, observerCollection } = this\n    const viewports = observerCollection.viewports\n    let viewport = viewports.get(container)\n\n    if (!viewport) {\n      viewport = new Viewport(container, observerCollection)\n      viewports.set(container, viewport)\n    }\n\n    const viewportObservers = viewport.observers\n    if (viewportObservers.indexOf(this) < 0) viewportObservers.push(this)\n\n    return viewport\n  },\n\n  destroy() {\n    const { container, observerCollection } = this\n    const viewports = observerCollection.viewports\n    const viewport = viewports.get(container)\n\n    if (viewport) {\n      const viewportObservers = viewport.observers\n      const observerIndex = viewportObservers.indexOf(this)\n      if (observerIndex > -1) viewportObservers.splice(observerIndex, 1)\n      if (!viewportObservers.length) {\n        viewport.destroy()\n        viewports.delete(container)\n      }\n    }\n  }\n}\n\n/**\n * @class ObserverCollection\n * For grouping observers with a custom scroll/resize handler\n */\nexport function ObserverCollection(opts = {}) {\n  if (!(this instanceof ObserverCollection)) return new ObserverCollection(opts)\n  this.viewports = new Map()\n  this.handleScrollResize = opts.handleScrollResize\n}\n\n// Internally track all viewports so we only have 1 set of event listeners per container\nconst defaultObserverCollection = new ObserverCollection()\n\n// Expose private variable for tests\nif (process.env.NODE_ENV === 'test') window.__viewports__ = defaultObserverCollection.viewports\n","import { Observer } from './observer'\n\nexport function PositionObserver(opts = {}) {\n  if (!(this instanceof PositionObserver)) return new PositionObserver(opts)\n\n  this.onTop = opts.onTop\n  this.onBottom = opts.onBottom\n  this.onLeft = opts.onLeft\n  this.onRight = opts.onRight\n  this.onFit = opts.onFit\n\n  this._wasTop = true\n  this._wasBottom = false\n  this._wasLeft = true\n  this._wasRight = false\n  this._wasFit = false\n\n  const viewport = Observer.call(this, opts)\n  this.check(viewport.getState())\n}\n\nPositionObserver.prototype = Object.create(Observer.prototype)\nPositionObserver.prototype.constructor = PositionObserver\n\nPositionObserver.prototype.check = function (viewportState) {\n  const {\n    onTop,\n    onBottom,\n    onLeft,\n    onRight,\n    onFit,\n    _wasTop,\n    _wasBottom,\n    _wasLeft,\n    _wasRight,\n    _wasFit,\n    container,\n    offsetX,\n    offsetY,\n    once\n  } = this\n  const { scrollHeight, scrollWidth } = container\n  const { width, height, positionX, positionY } = viewportState\n\n  const atTop = positionY - offsetY <= 0\n  const atBottom = scrollHeight > height && height + positionY + offsetY >= scrollHeight\n  const atLeft = positionX - offsetX <= 0\n  const atRight = scrollWidth > width && width + positionX + offsetX >= scrollWidth\n  const fits = scrollHeight <= height && scrollWidth <= width\n\n  let untriggered = false\n\n  if (onBottom && !_wasBottom && atBottom) onBottom.call(this, container, viewportState)\n  else if (onTop && !_wasTop && atTop) onTop.call(this, container, viewportState)\n  else if (onRight && !_wasRight && atRight) onRight.call(this, container, viewportState)\n  else if (onLeft && !_wasLeft && atLeft) onLeft.call(this, container, viewportState)\n  else if (onFit && !_wasFit && fits) onFit.call(this, container, viewportState)\n  else untriggered = true\n\n  if (once && !untriggered) this.destroy()\n\n  this._wasTop = atTop\n  this._wasBottom = atBottom\n  this._wasLeft = atLeft\n  this._wasRight = atRight\n  this._wasFit = fits\n}\n","import { Observer } from './observer'\n\nexport function ElementObserver(element, opts = {}) {\n  if (!(this instanceof ElementObserver)) return new ElementObserver(element, opts)\n\n  this.element = element\n  this.onEnter = opts.onEnter\n  this.onExit = opts.onExit\n  this._didEnter = false\n\n  const viewport = Observer.call(this, opts)\n  if (isElementInDOM(element)) this.check(viewport.getState())\n}\n\nElementObserver.prototype = Object.create(Observer.prototype)\nElementObserver.prototype.constructor = ElementObserver\n\nElementObserver.prototype.check = function (viewportState) {\n  const { container, onEnter, onExit, element, offsetX, offsetY, once, _didEnter } = this\n  if (!isElementInDOM(element)) return this.destroy()\n\n  const inViewport = isElementInViewport(element, offsetX, offsetY, viewportState, container)\n  if (!_didEnter && inViewport) {\n    this._didEnter = true\n    if (onEnter) {\n      onEnter.call(this, element, viewportState)\n      if (once) this.destroy()\n    }\n  } else if (_didEnter && !inViewport) {\n    this._didEnter = false\n    if (onExit) {\n      onExit.call(this, element, viewportState)\n      if (once) this.destroy()\n    }\n  }\n}\n\nfunction isElementInViewport(element, offsetX, offsetY, viewportState, container) {\n  const elRect = element.getBoundingClientRect()\n\n  if (!elRect.width || !elRect.height) return false\n\n  let topBound, bottomBound, leftBound, rightBound\n  const windowWidth = window.innerWidth\n  const windowHeight = window.innerHeight\n  const windowTopBound = windowHeight\n  const windowLeftBound = windowWidth\n  const windowRightBound = 0\n  const windowBottomBound = 0\n\n  if (container === document.body) {\n    topBound = windowTopBound\n    bottomBound = windowBottomBound\n    leftBound = windowLeftBound\n    rightBound = windowRightBound\n  } else {\n    const isInWindow =\n      elRect.top < windowTopBound &&\n      elRect.bottom > windowBottomBound &&\n      elRect.left < windowLeftBound &&\n      elRect.right > windowRightBound\n    if (!isInWindow) return false\n    const scrollElRect = container.getBoundingClientRect()\n    topBound = scrollElRect.bottom\n    bottomBound = scrollElRect.top\n    leftBound = scrollElRect.right\n    rightBound = scrollElRect.left\n  }\n\n  return (\n    elRect.top < topBound + offsetY &&\n    elRect.bottom > bottomBound - offsetY &&\n    elRect.left < leftBound + offsetX &&\n    elRect.right > rightBound - offsetX\n  )\n}\n\nfunction isElementInDOM(element) {\n  return element && element.parentNode\n}\n"],"names":["Viewport","container","observerCollection","this","observers","lastX","lastY","let","scheduled","_handler","requestAnimationFrame","state","getState","i","length","check","positionX","positionY","customHandleScrollResize","handleScrollResize","handler","createMutationObserver","mutationObserver","MutationObserver","observe","document","attributes","childList","subtree","listenerOpts","capture","passive","addEventListener","readyState","Observer","opts","const","offset","offsetX","offsetY","body","once","defaultObserverCollection","activate","ObserverCollection","viewports","Map","prototype","width","height","window","innerWidth","innerHeight","pageXOffset","pageYOffset","offsetWidth","offsetHeight","scrollLeft","scrollTop","destroy","removeEventListener","disconnect","viewport","get","set","viewportObservers","indexOf","push","observerIndex","splice","delete","PositionObserver","onTop","onBottom","onLeft","onRight","onFit","_wasTop","_wasBottom","_wasLeft","_wasRight","_wasFit","call","ElementObserver","element","onEnter","onExit","_didEnter","isElementInDOM","parentNode","Object","create","constructor","viewportState","atTop","atBottom","scrollHeight","atLeft","atRight","scrollWidth","fits","untriggered","inViewport","topBound","bottomBound","leftBound","rightBound","elRect","getBoundingClientRect","windowWidth","windowTopBound","windowLeftBound","windowRightBound","windowBottomBound","top","bottom","left","right","scrollElRect","isElementInViewport"],"mappings":"+OAKO,SAASA,EAASC,EAAWC,cAClCC,KAAKF,UAAYA,EACjBE,KAAKC,UAAY,GACjBD,KAAKE,MAAQ,EACbF,KAAKG,MAAQ,EAEbC,IAAIC,GAAY,EACVC,aACCD,IACHA,GAAY,EACZE,kCAGE,IAFA,MAAsBP,YAChBQ,EAAQR,EAAKS,WACVC,EAAIT,EAAUU,OAAQD,KAAOT,EAAUS,GAAGE,MAAMJ,GACzDR,EAAKE,MAAQM,EAAMK,UACnBb,EAAKG,MAAQK,EAAMM,UACnBT,GAAY,OAKZU,EAA2BhB,EAAmBiB,mBAC9CC,EAAWjB,KAAKiB,QAAUF,EAA2BA,EAAyBT,GAAYA,EAE1FY,cACsBlB,EAAKmB,iBAAmB,IAAIC,iBAAiBd,IACtDe,QAAQC,SAAU,CAAEC,YAAY,EAAMC,WAAW,EAAMC,SAAS,KAG7EC,EAAe,CAAEC,SAAS,EAAMC,SAAS,GAC/CC,iBAAiB,SAAUZ,EAASS,GACpCG,iBAAiB,SAAUZ,EAASS,GAER,YAAxBJ,SAASQ,WACXZ,IAEAW,iBAAiB,mBAAoBX,GCnClC,SAASa,EAASC,GACvBC,IAAMC,IAAWF,EAAKE,QAAU,EAMhC,OALAlC,KAAKmC,QAA0B,MAAhBH,EAAKG,UAAoBH,EAAKG,QAAUD,EACvDlC,KAAKoC,QAA0B,MAAhBJ,EAAKI,UAAoBJ,EAAKI,QAAUF,EACvDlC,KAAKF,UAAYkC,EAAKlC,WAAawB,SAASe,KAC5CrC,KAAKsC,OAASN,EAAKM,KACnBtC,KAAKD,mBAAqBiC,EAAKjC,oBAAsBwC,EAC9CvC,KAAKwC,WAyCP,SAASC,EAAmBT,GACjC,kBADwC,MAClChC,gBAAgByC,GAAqB,OAAO,IAAIA,EAAmBT,GACzEhC,KAAK0C,UAAY,IAAIC,IACrB3C,KAAKgB,mBAAqBgB,EAAKhB,mBDZjCnB,EAAS+C,UAAY,CACnBnC,oBACE,IACIoC,EAAOC,EAAQjC,EAAWC,IADMd,uCAuBpC,OApBIF,IAAcwB,SAASe,MACzBQ,EAAQE,OAAOC,WACfF,EAASC,OAAOE,YAChBpC,EAAYkC,OAAOG,YACnBpC,EAAYiC,OAAOI,cAEnBN,EAAQ/C,EAAUsD,YAClBN,EAAShD,EAAUuD,aACnBxC,EAAYf,EAAUwD,WACtBxC,EAAYhB,EAAUyD,WAWjB,OAAEV,SAAOC,YAAQjC,YAAWC,aAR/BZ,EAAQW,EAAwB,QAC3BX,EAAQW,EAAwB,OACvB,kBAEdV,EAAQW,EAAwB,OAC3BX,EAAQW,EAAwB,KACvB,SAKpB0C,mBACE,MAAsCxD,eAAAA,sBACtCyD,oBAAoB,SAAUxC,GAC9BwC,oBAAoB,SAAUxC,GAC1BE,GAAkBA,EAAiBuC,eC7D3C3B,EAASa,UAAY,CACnBJ,oBACE,MAA0CxC,iBAAAA,wBACpC0C,EAAY3C,EAAmB2C,UACjCiB,EAAWjB,EAAUkB,IAAI9D,GAExB6D,IACHA,EAAW,IAAI9D,EAASC,EAAWC,GACnC2C,EAAUmB,IAAI/D,EAAW6D,IAG3B1B,IAAM6B,EAAoBH,EAAS1D,UAGnC,OAFI6D,EAAkBC,QAAQ/D,MAAQ,GAAG8D,EAAkBE,KAAKhE,MAEzD2D,GAGTH,mBACE,MAA0CxD,eACpC0C,EADoC1C,wBACL0C,UAC/BiB,EAAWjB,EAAUkB,IAAI9D,GAE/B,GAAI6D,EAAU,CACZ1B,IAAM6B,EAAoBH,EAAS1D,UAC7BgE,EAAgBH,EAAkBC,QAAQ/D,MAC5CiE,GAAiB,GAAGH,EAAkBI,OAAOD,EAAe,GAC3DH,EAAkBnD,SACrBgD,EAASH,UACTd,EAAUyB,OAAOrE,OAiBzBmC,IAAMM,EAA4B,IAAIE,EC3D/B,SAAS2B,EAAiBpC,GAC/B,kBADsC,MAChChC,gBAAgBoE,GAAmB,OAAO,IAAIA,EAAiBpC,GAErEhC,KAAKqE,MAAQrC,EAAKqC,MAClBrE,KAAKsE,SAAWtC,EAAKsC,SACrBtE,KAAKuE,OAASvC,EAAKuC,OACnBvE,KAAKwE,QAAUxC,EAAKwC,QACpBxE,KAAKyE,MAAQzC,EAAKyC,MAElBzE,KAAK0E,SAAU,EACf1E,KAAK2E,YAAa,EAClB3E,KAAK4E,UAAW,EAChB5E,KAAK6E,WAAY,EACjB7E,KAAK8E,SAAU,EAEf7C,IAAM0B,EAAW5B,EAASgD,KAAK/E,KAAMgC,GACrChC,KAAKY,MAAM+C,EAASlD,YChBf,SAASuE,EAAgBC,EAASjD,GACvC,kBAD8C,MACxChC,gBAAgBgF,GAAkB,OAAO,IAAIA,EAAgBC,EAASjD,GAE5EhC,KAAKiF,QAAUA,EACfjF,KAAKkF,QAAUlD,EAAKkD,QACpBlF,KAAKmF,OAASnD,EAAKmD,OACnBnF,KAAKoF,WAAY,EAEjBnD,IAAM0B,EAAW5B,EAASgD,KAAK/E,KAAMgC,GACjCqD,EAAeJ,IAAUjF,KAAKY,MAAM+C,EAASlD,YAkEnD,SAAS4E,EAAeJ,GACtB,OAAOA,GAAWA,EAAQK,WDzD5BlB,EAAiBxB,UAAY2C,OAAOC,OAAOzD,EAASa,WACpDwB,EAAiBxB,UAAU6C,YAAcrB,EAEzCA,EAAiBxB,UAAUhC,MAAQ,SAAU8E,GAC3C,MAeI1F,gQAIE2F,EAAQ7E,EAAYsB,GAAW,EAC/BwD,EAAWC,EAAe/C,GAAUA,EAAShC,EAAYsB,GAAWyD,EACpEC,EAASjF,EAAYsB,GAAW,EAChC4D,EAAUC,EAAcnD,GAASA,EAAQhC,EAAYsB,GAAW6D,EAChEC,EAAOJ,GAAgB/C,GAAUkD,GAAenD,EAElDqD,GAAc,EAEd5B,IAAaK,GAAciB,EAAUtB,EAASS,KAAK/E,KAAMF,EAAW4F,GAC/DrB,IAAUK,GAAWiB,EAAOtB,EAAMU,KAAK/E,KAAMF,EAAW4F,GACxDlB,IAAYK,GAAakB,EAASvB,EAAQO,KAAK/E,KAAMF,EAAW4F,GAChEnB,IAAWK,GAAYkB,EAAQvB,EAAOQ,KAAK/E,KAAMF,EAAW4F,GAC5DjB,IAAUK,GAAWmB,EAAMxB,EAAMM,KAAK/E,KAAMF,EAAW4F,GAC3DQ,GAAc,EAEf5D,IAAS4D,GAAalG,KAAKwD,UAE/BxD,KAAK0E,QAAUiB,EACf3F,KAAK2E,WAAaiB,EAClB5F,KAAK4E,SAAWkB,EAChB9F,KAAK6E,UAAYkB,EACjB/F,KAAK8E,QAAUmB,GCnDjBjB,EAAgBpC,UAAY2C,OAAOC,OAAOzD,EAASa,WACnDoC,EAAgBpC,UAAU6C,YAAcT,EAExCA,EAAgBpC,UAAUhC,MAAQ,SAAU8E,GAC1C,MAAmF1F,qGACnF,IAAKqF,EAAeJ,GAAU,OAAOjF,KAAKwD,UAE1CvB,IAAMkE,EAgBR,SAA6BlB,EAAS9C,EAASC,EAASsD,EAAe5F,GACrEmC,IAIImE,EAAUC,EAAaC,EAAWC,EAJhCC,EAASvB,EAAQwB,wBAEvB,IAAKD,EAAO3D,QAAU2D,EAAO1D,OAAQ,OAAO,EAG5Cb,IAAMyE,EAAc3D,OAAOC,WAErB2D,EADe5D,OAAOE,YAEtB2D,EAAkBF,EAClBG,EAAmB,EACnBC,EAAoB,EAE1B,GAAIhH,IAAcwB,SAASe,KACzB+D,EAAWO,EACXN,EAAcS,EACdR,EAAYM,EACZL,EAAaM,MACR,CAML,KAJEL,EAAOO,IAAMJ,GACbH,EAAOQ,OAASF,GAChBN,EAAOS,KAAOL,GACdJ,EAAOU,MAAQL,GACA,OAAO,EACxB5E,IAAMkF,EAAerH,EAAU2G,wBAC/BL,EAAWe,EAAaH,OACxBX,EAAcc,EAAaJ,IAC3BT,EAAYa,EAAaD,MACzBX,EAAaY,EAAaF,KAG5B,OACET,EAAOO,IAAMX,EAAWhE,GACxBoE,EAAOQ,OAASX,EAAcjE,GAC9BoE,EAAOS,KAAOX,EAAYnE,GAC1BqE,EAAOU,MAAQX,EAAapE,EApDXiF,CAAoBnC,EAAS9C,EAASC,EAASsD,EAAe5F,IAC5EsF,GAAae,GAChBnG,KAAKoF,WAAY,EACbF,IACFA,EAAQH,KAAK/E,KAAMiF,EAASS,GACxBpD,GAAMtC,KAAKwD,YAER4B,IAAce,IACvBnG,KAAKoF,WAAY,EACbD,IACFA,EAAOJ,KAAK/E,KAAMiF,EAASS,GACvBpD,GAAMtC,KAAKwD"}